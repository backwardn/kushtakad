<div class="row">

    <div class="col s12 m4 l4">
        <form class="marjen z-depth-1" method="post" action="/kushtaka/teams">
            <div class="row">
                <h5 class="col">New Team</h5>
            </div>

            <div class="row">

                <div class="input-field col">
                    <input id="name" type="text" name="name" value="{{ .Forms.Team.Name }}" required class="validate">
                    <label for="name" data-error="example: devops-nyc-01" data-success="valid">
                        Name
                        <a class="vertical-align tooltipped" data-position="bottom" data-tooltip="The name describing the team that will get alerts (ops, ops-west, ops-east, etc)."><i class="material-icons icon-black">help_outline</i></a>
                    </label>
                </div>
            </div>

            <div class="row">
                <div class="input-field col">
                    <button class="waves-effect waves-light teal lighten-1 btn">Create</button>
                </div>
            </div>
        </form>
    </div>

    <div class="col s12 m8 l8">
        {{ if len .Teams }}
            <div class="marjen z-depth-1">

                <h5>Teams List</h5>

                <table class="striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Settings</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                    {{ range $key, $v := .Teams }}
                            <tr id="team-id-{{$v.ID}}">
                                <td>{{ $v.Name }}</td>
                                <td>
                                    <a class="btn-floating waves-effect waves-light teal lighten-1" href="/kushtaka/team/{{ $v.ID }}">
                                        <i class="material-icons">settings</i>
                                    </a>
                                </td>
                                {{ if eq $v.Name "Default" }}
                                    <td><a class="disabled btn-floating waves-effect waves-light"><i class="material-icons">delete_sweep</i></button></td>
                                {{ else }}
                                    <td><a class="btn-floating waves-effect waves-light teal lighten-1" onclick="deleteTeamModal({{ $v }})"><i class="material-icons">delete_sweep</i></a></td>
                                {{ end }}
                            </tr>
                    {{ end }}
                    </tbody>
                </table>
            </div>
        {{ end }}
    </div>

    <!-- Delete Modal Structures -->
    <div id="delete-team-modal" class="modal-gap modal">
        <div class="modal-content">
            <div class="row">
                <h5 class="col">Delete the Team?</h5>
            </div>

            <div class="row">
                <div class="input-field col">
                    <button id="delete-team-modal-no"  class="waves-effect waves-light teal lighten-1 btn">Cancel</button>
                    <button id="delete-team-modal-yes" class="waves-effect waves-light red lighten-1 btn">Delete</button>
                </div>
            </div>
        </div>
    </div>

</div>



<script>
     var uri = "{{ .URI }}/kushtaka/team";

    $(document).ready(function(){
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems, {});
    });

    function cancelDelete(id) {
        var modalElement = document.getElementById("delete-team-modal");
        var instance = M.Modal.getInstance(modalElement);
        instance.close();
    }

    function deleteTeam(obj) {
        deleteData(obj, uri);
        console.log(obj);
        var id = "team-id-" + obj.ID.toString();
        console.log(id);
        document.getElementById(id).remove();
    }

    function deleteData(data, url) {
        fetch(url, {
        method: 'DELETE', // or 'PUT'
        body: JSON.stringify(data), // data can be `string` or {object}!
        headers:{
            'Content-Type': 'application/json'
        }
        }).then(res => res.json())
        .then(response => respDeleteTeam("delete-team-modal", response))
        .catch(error => errc(error));
    }


    function respDeleteTeam(modalType, resp) {
        var modalElement = document.getElementById(modalType);
        var instance = M.Modal.getInstance(modalElement);
        if (resp.Status === "success") {
            M.toast({html: resp.Message , classes: 'green lighten-1'})
            instance.close();
        } else {
            M.toast({html: resp.Message , classes: 'red lighten-1'})
        }
    }


    function deleteTeamModal(id) {
        var modalElement = document.getElementById("delete-team-modal");
        var instance = M.Modal.getInstance(modalElement);

        document.getElementById("delete-team-modal-no").onclick = function() {cancelDelete(id)};
        document.getElementById("delete-team-modal-yes").onclick = function() {deleteTeam(id)};

        instance.open();

    }

    function errc(err) {
        M.toast({html: err, classes: 'green lighten-1'})
        console.error('Error:', err);
    }
</script>