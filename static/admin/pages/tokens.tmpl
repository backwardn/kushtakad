<div class="row">

    <div class="col s12 m4 l4">

    <form class="marjen z-depth-1" method="post" action="/kushtaka/tokens">
        <div class="row">
            <h5 class="col">Create Token</h5>
        </div>

        <div class="row">

            <div class="input-field col s12">
                <input id="name" type="text" name="name" value="{{ .Forms.Token.Name }}" required class="validate">
                <label class="vertical-align" for="name" data-error="example: devops-nyc-01" data-success="valid">
                    Name
                    <a class="vertical-align tooltipped" data-position="bottom" data-tooltip="A unique name for this token"><i class="material-icons icon-black">help_outline</i></a>
                </label>
            </div>

            <div class="input-field col s12">
                <textarea id="note" class="materialize-textarea" type="text" name="note" value="{{ .Forms.Token.Note }}" required class="validate"></textarea>
                <label for="note">
                    Note
                    <a class="tooltipped" data-position="bottom" data-tooltip="Leave a note with your intentions for this token. Where will you place it? What are you hoping to accomplish? etc"><i class="material-icons icon-black">help_outline</i></a>
                </label>
            </div>


            <div class="input-field col s12">
                <select name="team_id">
                    <option value="" disabled selected>---</option>
                    {{ if len .Teams }}
                        {{ range $key, $v := .Teams }}
                            <option value="{{ $v.ID }}">{{ $v.Name }}</option>
                        {{ end }}
                    {{ end }}
                </select>
                <label for="team">
                    Team
                    <a class="tooltipped" data-position="bottom" data-tooltip="The name of the team that will recieve the email alerts."><i class="material-icons icon-black">help_outline</i></a>
                </label>
            </div>

            <div class="input-field col s12">
                <select name="type">
                    <option value="" disabled selected>---</option>
                    <option value="link">Link</option>
                    <option value="pdf">Pdf</option>
                    <option value="docx">Docx</option>
                </select>
                <label for="note">
                   Type 
                    <a class="tooltipped" data-position="bottom" data-tooltip="What type of token do you want to create?"><i class="material-icons icon-black">help_outline</i></a>
                </label>
            </div>
        </div>

        <div class="row">
            <div class="input-field col">
                <button class="waves-effect waves-light teal lighten-1 btn">Create</button>
            </div>
        </div>
    </form>

    </div>

    <div class="col s12 m8 l8">
            <div class="marjen z-depth-1">
                <h5>Tokens List</h5>
                <table class="striped">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Type</th>
                            <th>Note</th>
                            <th>Action</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                    {{ if len .Tokens}}
                    {{ range $key, $v := .Tokens }}
                            <tr id="token-id-{{ $v.ID }}">
                                <td>{{ $v.Name }}</td>
                                <td>{{ $v.Type }}</td>
                                <td>{{ $v.Note }}</td>
                                <td>
                                    {{ if ne $v.Type "link" }}
                                        <a class="btn-floating waves-effect waves-light teal lighten-1" href="/kushtaka/download/token/{{ $v.Type }}/{{ $v.ID }}"><i class="material-icons">file_download</i></a>
                                    {{ else }}
                                        <input size="2" class="copy-text" id="token-copy-{{$v.ID}}" type="text" value="{{ $v.URL}}">
                                        <a class="btn-floating waves-effect waves-light teal lighten-1" onclick="copy({{$v.ID}})"><i class="material-icons">content_copy</i></a>
                                    {{ end }}
                                </td>
                                <td><a class="btn-floating waves-effect waves-light teal lighten-1" onclick="deleteTokenModal({ ID: {{ $v.ID }}, type: {{ $v.Type }} } )"><i class="material-icons">delete_sweep</i></a></td>
                            </tr>
                    {{ end }}
                    {{ end }}
                    </tbody>
                </table>
            </div>
    </div>

</div>


<!-- Delete Modal Structures -->
<div id="delete-token-modal" class="modal-gap modal">
    <div class="modal-content">
        <div class="row">
            <h5 class="col">Delete the Token?</h5>
        </div>

        <div class="row">
            <div class="input-field col">
                <button id="delete-token-modal-no"  class="waves-effect waves-light teal lighten-1 btn">Cancel</button>
                <button id="delete-token-modal-yes" class="waves-effect waves-light red lighten-1 btn">Delete</button>
            </div>
        </div>
    </div>
</div>


<script>

    var uri = "{{ .URI }}/kushtaka/token";

    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems, {});
    });

    function copy(id) {
        var txt = "#token-copy-" + id.toString();
        var copyText = document.querySelector(txt);
        copyText.select();
        document.execCommand("copy");
        M.toast({html: "Copied to clipboard!", classes: 'green lighten-1'})
    } 

    function respDeleteToken(modalType, resp) {
        var modalElement = document.getElementById(modalType);
        var instance = M.Modal.getInstance(modalElement);

        if (resp.Status === "success") {
            M.toast({html: resp.Message , classes: 'green lighten-1'})
            instance.close();
        } else {
            M.toast({html: resp.Message , classes: 'red lighten-1'})
        }
    }

    function deleteData(data, url) {
        fetch(url, {
        method: 'DELETE', // or 'PUT'
        body: JSON.stringify(data), // data can be `string` or {object}!
        headers:{
            'Content-Type': 'application/json'
        }
        }).then(res => res.json())
        .then(response => respDeleteToken("delete-token-modal", response))
        .catch(error => errc(error));
    }

    function cancelDelete(id) {
        var modalElement = document.getElementById("delete-token-modal");
        var instance = M.Modal.getInstance(modalElement);
        instance.close();
    }

    function deleteToken(obj) {
        deleteData(obj, uri);
        var id = "token-id-" + obj.ID.toString();
        document.getElementById(id).remove();
    }

    function deleteTokenModal(id) {
        var modalElement = document.getElementById("delete-token-modal");
        var instance = M.Modal.getInstance(modalElement);
        document.getElementById("delete-token-modal-no").onclick = function() {cancelDelete(id)};
        document.getElementById("delete-token-modal-yes").onclick = function() {deleteToken(id)};
        instance.open();
    }

    function errc(err) {
        M.toast({html: err, classes: 'green lighten-1'})
        console.error('Error:', err);
    }

    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('select');
        var instances = M.FormSelect.init(elems, options = {classes:"select-tealo", dropdownOptions: {}});
    });

    $(document).ready(function(){
        $('select').formSelect();
        $('.tooltipped').tooltip();
    });

</script>