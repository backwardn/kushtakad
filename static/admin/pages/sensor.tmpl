<div class="row">
    <h1>{{ .Sensor.Name }}</h1>
    <h1>{{ .Sensor.ApiKey }}</h1>
    <div class="tform z-depth-1 col s12 m4 l4">

        <div class="row">
            <h5 class="col">Select Service</h5>
        </div>

        <div class="row">

            <div class="input-field col s8 m8 l8">
                <select id="service-type" name="type">
                    <option value="" disabled selected>---</option>
                    <option value="telnet">Telnet</option>
                    <option value="ftp">FTP</option>
                    <option value="ssh">SSH</option>
                </select>
           </div>

            <div class="input-field col">
                <button class="btn-floating btn-large waves-effect waves-light teal lighten-1" onclick="modalPop()">
                    <i class="material-icons">add</i>
                </button>
            </div>

        </div>
    </div>

    <div class="col s12 m8 l8">
        {{ if len .SensorServices }}
            <div class="marjen valign-wrapper z-depth-1">
                <table class="striped">
                    <thead>
                        <tr>
                            <th>Port</th>
                            <th>Type</th>
                            <th>Update</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                    {{ range $key, $service := .SensorServices }}
                            <tr>
                                <td>{{ $service.Port }}</td>
                                <td>{{ $service.Type }}</td>
                                <td><a class="btn-floating waves-effect waves-light teal lighten-1" onclick="updateServiceModal({ serviceID: {{ $service.ID }}, port: {{ $service.Port }}, type: {{ $service.Type }} } )"><i class="material-icons">settings</i></a></td>
                                <td><a class="btn-floating waves-effect waves-light teal lighten-1" onclick="deleteServiceModal({ serviceID: {{ $service.ID }}, port: {{ $service.Port }}, type: {{ $service.Type }} } )"><i class="material-icons">delete_sweep</i></a></td>
                            </tr>
                    {{ end }}
                    </tbody>
                </table>
            </div>
        {{ end }}
    </div>

    <input hidden id="sensor_id" type="text" name="sensor_id" value="{{ .Sensor.ID }}" disabled class="validate">

    <!-- Telnet Modal Structures -->
    <div id="telnet-modal" class="modal-gap modal">
        <div class="modal-content">

                <div class="row">
                    <h5 class="col">Add Telnet Service</h5>
                </div>

                <div class="row">
                    <div class="input-field col s2">
                        <input id="telnet-port" type="text" name="telnet-port" value="" required class="validate">
                        <label for="telnet-port" data-error="example: telnet, ssh, ftp" data-success="valid">Port</label>
                    </div>
                </div>
        
                <div class="row">
                    <div class="input-field col">
                        <select id="telnet-emulate" name="telnet-emulate">
                            <option value="" disabled selected>---</option>
                            <option value="basic">basic</option>
                        </select>
                        <label for="emulate" data-error="example: Basic, Complex" data-success="valid">What kind of telnet server should we emulate?</label>
                    </div>
                </div>

                <div class="row">
                    <div class="input-field col">
                        <button onclick="post('telnet')" class="waves-effect waves-light teal lighten-1 btn">Submit</button>
                    </div>
                </div>

        </div>
    </div>

    <div id="delete-service-modal" class="modal-gap modal">
        <div class="modal-content">
        </div>
    </div>

</div>

<script>


    var uri = "http://localhost:3000/kushtaka/service/";

    document.addEventListener('DOMContentLoaded', function() {
        var elems = document.querySelectorAll('.modal');
        var instances = M.Modal.init(elems, {});
    });

    $(document).ready(function(){
        $('select').formSelect();
    });


    function modalPop() {
        var el = document.getElementById("service-type");
        var type = el.options[el.selectedIndex].value;

        modalType = type + "-modal"; 
        var modalElement = document.getElementById(modalType);
        var instance = M.Modal.getInstance(modalElement);
        instance.open();
    }

    function deleteServiceModal(id) {
        var modalElement = document.getElementById("delete-service-modal");
        var instance = M.Modal.getInstance(modalElement);
        instance.open();

    }

    function post(type) {
        if (type == "telnet") {
            postTelnet(type);
        }
    }

    function postTelnet(type) {
        var sid = parseInt(document.getElementById("sensor_id").value);
        var telp = parseInt(document.getElementById("telnet-port").value);
        var el = document.getElementById("telnet-emulate");
        var telem = el.options[el.selectedIndex].value;
        var url = uri + sid + "/type/telnet";
        var data = {sensorId: sid , type: type, port: telp, emulate: telem};
        postData(data, url);
    }

    function respTelnet(resp) {
        console.log('Success:', JSON.stringify(resp));
    }

    function errc(err) {
        console.error('Error:', err);
    }

    function postData(data, url, type) {
        fetch(url, {
        method: 'POST', // or 'PUT'
        body: JSON.stringify(data), // data can be `string` or {object}!
        headers:{
            'Content-Type': 'application/json'
        }
        }).then(res => res.json())
        .then(response => respTelnet(response))
        .catch(error => errc(error));
    }

</script>