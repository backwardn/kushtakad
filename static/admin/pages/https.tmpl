<div class="row">
        <div class="col s12 m4 m4">
            <div class="marjen z-depth-1">

                <div class="row">
                    <h5 class="col s12 m12 l12">HTTPS Test</h5>
                </div>

                <div class="row">
                    <div class="input-field col s12 m8 18">
                        <input id="fqdn" type="text" name="fqdn" value="">
                        <label for="fqdn" data-error="example: admin" data-success="valid">fqdn</label>
                        <span class="helper-text" data-error="wrong" data-success="right">example: (test.example.com, kushtaka.example.com, www.example.com)</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col s12 m8 18">
                        <button onclick="postTest()" class="waves-effect waves-light teal lighten-1 btn">test</button>
                    </div>
                </div>

            </div>
        </div>

        <div class="col s12 m8 l8">
            <div class="marjen z-depth-1">
                <h5>HTTPS Results</h5>
                <table id="service-table" class="striped">
                    <thead>
                        <tr>
                            <th>FQDN</th>
                            <th>State</th>
                            <th>Created</th>
                        </tr>
                    </thead>
                    <tbody id="services-tbody">
                    {{ if len .LETests }}
                        {{ range $key, $le := .LETests}}
                            <tr id="letest-id-{{ $le.ID }}">
                                <td>{{ $le.FQDN }}</td>
                                <td class="tooltipped" data-position="bottom" data-tooltip="{{ $le.StateMsg }}">
                                    {{ $le.State }}
                                    <i class="material-icons icon-black">help_outline</i>
                                </td>
                                <td>{{ prettytime $le.Created }}</td>
                            </tr>
                        {{ end }}
                    {{ end }}
                    </tbody>
                </table>
            </div>
        </div>
</div>


<script>


    var uri = "{{ .URI }}/kushtaka/https";

    $(document).ready(function(){
        $('.tooltipped').tooltip();
    });

    function checkFill() {
        var cont = "reboot";
        var color = "teal";
        if (formFilled()) {
            var st = document.getElementById(cont);
            st.classList.remove("disabled");
            st.classList.add(color);
        } else {
            var st = document.getElementById(cont);
            st.disabled = true;
            st.classList.add("disabled");
            st.classList.remove(color);
        }
    }
    function getForm() {
        return {
            fqdn: document.getElementById("fqdn").value,
        };
    }

    function postTest() {
        var url = uri + "/test"
        var data = getForm();
        M.toast({html: "Testing fqdn...", classes: 'orange lighten-1'})

        fetch(url, {
        method: 'POST', // or 'PUT'
        body: JSON.stringify(data), // data can be `string` or {object}!
        headers:{
            'Content-Type': 'application/json'
        }
        }).then(res => res.json())
        .then(response => respTestFunc(response))
        .catch(error => errc(error));
    }

    function answer(test, type) {
        console.log(test, type);
        if (test) {
            var st = document.getElementById(type);
            st.classList.add("green-text");
            st.innerHTML = "Yes";
            console.log(st);
        } else {
            var st = document.getElementById(type);
            st.classList.add("red-text");
            st.innerHTML = "No";
        }
    }
    function respTestFunc(resp) {
        /*
        var allTestsPassed = true;
        toasty(resp.Status, resp.Message);
        if (!resp.Test) {
            allTestsPassed = false;
        }
        answer(resp.Obj.Test, resp.Type);

        var button = document.getElementById("reboot");
        if (allTestsPassed) {
            button.classList.remove("disabled");
            button.classList.add("teal")
            button.classList.add("lighten-1")
        //} else {
        //     button.classList.remove("disabled");
        //    button.classList.add("red")
        //    button.classList.add("lighten-1")
        }
        */
    }

    function toasty(status, message) {
        if (status === "success") {
            M.toast({html: message , classes: 'green lighten-1'})
        } else {
            M.toast({html: message , classes: 'red lighten-1'})
        }
    }

    function postReboot() {
        url = uri + "/reboot";
        var data = getForm();
        M.toast({html: "Trying to send...", classes: 'orange lighten-1'})
        console.log(url);
        console.log(data);
        postData(data, url);
    }


    function postData(data, url) {
        fetch(url, {
        method: 'POST', // or 'PUT'
        body: JSON.stringify(data), // data can be `string` or {object}!
        headers:{
            'Content-Type': 'application/json'
        }
        }).then(res => res.json())
        .then(response => respFunc(response))
        .catch(error => errc(error));
    }


    function respFunc(resp) {
        if (resp.Status === "success") {
            M.toast({html: resp.Message , classes: 'green lighten-1'})
        } else {
            M.toast({html: resp.Message , classes: 'red lighten-1'})
        }
    }

    function errc(err) {
        M.toast({html: err, classes: 'red lighten-1'})
        console.error('Error:', err);
    }
</script>